/*
 * config.h
 * libansilove 1.4.1
 * https://www.ansilove.org
 *
 * Copyright (c) 2011-2023 Stefan Vogt, Brian Cassidy, and Frederic Cambus
 * All rights reserved.
 *
 * libansilove is licensed under the BSD 2-Clause license.
 * See LICENSE file for details.
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

#ifndef CONFIG_H
#define CONFIG_H

#include <stdint.h>

#define LF	'\n'
#define CR	'\r'
#define TAB	'\t'
#define SUB	26
#define ESC	27

#define PCB_COLORS	71

static const uint8_t ansi_palette_red[] = {
	0x00, 0xaa, 0x00, 0xaa, 0x00, 0xaa, 0x00, 0xaa,
	0x55, 0xff, 0x55, 0xff, 0x55, 0xff, 0x55, 0xff
};

static const uint8_t ansi_palette_green[] = {
	0x00, 0x00, 0xaa, 0x55, 0x00, 0x00, 0xaa, 0xaa,
	0x55, 0x55, 0xff, 0xff, 0x55, 0x55, 0xff, 0xff
};

static const uint8_t ansi_palette_blue[] = {
	0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa,
	0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t workbench_palette_red[] = {
	0xaa, 0x00, 0xff, 0x66, 0x00, 0xff, 0x00, 0xff,
	0xaa, 0x00, 0xff, 0x66, 0x00, 0xff, 0x00, 0xff
};

static const uint8_t workbench_palette_green[] = {
	0xaa, 0x00, 0xff, 0x88, 0x00, 0x00, 0xff, 0xff,
	0xaa, 0x00, 0xff, 0x88, 0x00, 0x00, 0xff, 0xff
};

static const uint8_t workbench_palette_blue[] = {
	0xaa, 0x00, 0xff, 0xbb, 0xff, 0xff, 0xff, 0xff,
	0xaa, 0x00, 0xff, 0xbb, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t vga_palette_red[] = {
	0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa,
	0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff
};

static const uint8_t vga_palette_green[] = {
	0x00, 0x00, 0xaa, 0xaa, 0x00, 0x00, 0x55, 0xaa,
	0x55, 0x55, 0xff, 0xff, 0x55, 0x55, 0xff, 0xff
};

static const uint8_t vga_palette_blue[] = {
	0x00, 0xaa, 0x00, 0xaa, 0x00, 0xaa, 0x00, 0xaa,
	0x55, 0xff, 0x55, 0xff, 0x55, 0xff, 0x55, 0xff
};

/*  xterm-256 color palette
    colors 16-255 from https://www.ditig.com/publications/256-colors-cheat-sheet
    Use the VGA palette for the first 16 colors.
*/

static const uint8_t xterm256_palette_red[] = {
	0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa,
	0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, /* 0-15 - vga */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 16-23 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 24-31 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 32-39 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 40-47 */
	0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x5f, 0x5f, /* 48-55 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 56-63 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 64-71 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 72-79 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 80-87 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, /* 88-95 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, /* 96-103 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, /* 104-111 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, /* 112-119 */
	0x87, 0x87, 0x87, 0x87, 0xaf, 0xaf, 0xaf, 0xaf, /* 120-127 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 128-135 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 136-143 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 144-151 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 152-159 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, /* 160-167 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, /* 168-175 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, /* 176-183 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, /* 184-191 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xff, 0xff, 0xff, 0xff, /* 192-199 */
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 200-207 */
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 208-215 */
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 216-223 */
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 224-231, 231 is white */
	/* 232-255 grey gradient */
	0x08, 0x12, 0x1c, 0x26, 0x30, 0x3a, 0x44, 0x4e, /* 232-239 */
	0x58, 0x62, 0x6c, 0x76, 0x80, 0x8a, 0x94, 0x9e, /* 240-247 */
	0xa8, 0xb2, 0xbc, 0xc6, 0xd0, 0xda, 0xe4, 0xee, /* 248-255 */
};
static const uint8_t xterm256_palette_green[] = {
	0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa,
	0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, /* 0-15 - vga */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, /* 16-23 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x87, 0x87, 0x87, 0x87, /* 24-31 */
	0x87, 0x87, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 32-39 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xff, 0xff, /* 40-47 */
	0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, /* 48-55 */
	0x00, 0x00, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 56-63 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0xaf, 0xaf, /* 64-71 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xd7, 0xd7, 0xd7, 0xd7, /* 72-79 */
	0xd7, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 80-87 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, /* 88-95 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x87, 0x87, 0x87, 0x87, /* 96-103 */
	0x87, 0x87, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 104-111 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xff, 0xff, /* 112-119 */
	0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, /* 120-127 */
	0x00, 0x00, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 128-135 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0xaf, 0xaf, /* 136-143 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xd7, 0xd7, 0xd7, 0xd7, /* 144-151 */
	0xd7, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 152-159 */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, /* 160-167 */
	0x5f, 0x5f, 0x5f, 0x5f, 0x87, 0x87, 0x87, 0x87, /* 168-175 */
	0x87, 0x87, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, 0xaf, /* 176-183 */
	0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xff, 0xff, /* 184-191 */
	0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, /* 192-199 */
	0x00, 0x00, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, /* 200-207 */
	0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0xaf, 0xaf, /* 208-215 */
	0xaf, 0xaf, 0xaf, 0xaf, 0xd7, 0xd7, 0xd7, 0xd7, /* 216-223 */
	0xd7, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, /* 224-231, 231 is white */
	/* 232-255 grey gradient */
	0x08, 0x12, 0x1c, 0x26, 0x30, 0x3a, 0x44, 0x4e, /* 232-239 */
	0x58, 0x62, 0x6c, 0x76, 0x80, 0x8a, 0x94, 0x9e, /* 240-247 */
	0xa8, 0xb2, 0xbc, 0xc6, 0xd0, 0xda, 0xe4, 0xee, /* 248-255 */
};

static const uint8_t xterm256_palette_blue[] = {
	0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa,
	0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, /* 0-15 - vga */
	/* blue 16-231 script generated */
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f,
	0x87, 0xaf, 0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf,
	0xd7, 0xff, 0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff,
	/* 232-255 grey gradient */
	0x08, 0x12, 0x1c, 0x26, 0x30, 0x3a, 0x44, 0x4e, /* 232-239 */
	0x58, 0x62, 0x6c, 0x76, 0x80, 0x8a, 0x94, 0x9e, /* 240-247 */
	0xa8, 0xb2, 0xbc, 0xc6, 0xd0, 0xda, 0xe4, 0xee, /* 248-255 */
};


/* ADF color mapping array */
static const uint8_t adf_colors[16] = { 0, 1, 2, 3, 4, 5, 20, 7, 56, 57, 58, 59, 60, 61, 62, 63 };

static const uint8_t pcb_colors[PCB_COLORS] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x02, 0x06, 0x01, 0x05, 0x03, 0x07, 0x08, 0x0c, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x0e, 0x09, 0x0d, 0x0b, 0x0f
};

#endif /* CONFIG_H */
